{"version":3,"sources":["views/apps/plan/PlanTypeList.js"],"names":["PlanTypeList","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","className","render","history","size","color","onClick","push","pathname","data","_id","runthisfunction","plan_type","ReactHtmlParser","plan_desc","planTypeList","axiosConfig","get","then","response","setState","catch","err","swal","onGridReady","gridApi","api","gridColumnApi","columnApi","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","this","id","console","log","buttons","cancel","text","value","delete","Fragment","col-sm-6","tag","length","right","placeholder","onChange","e","target","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/203.c70d3212.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Col,\r\n  Row,\r\n  Card,\r\n  Input,\r\n  Button,\r\n  CardBody,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown,\r\n} from \"reactstrap\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport { ChevronDown, Edit, Trash2 } from \"react-feather\";\r\nimport { ContextLayout } from \"../../../utility/context/Layout\";\r\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport swal from \"sweetalert\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nclass PlanTypeList extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 100,\r\n        filter: true,\r\n      },\r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"sortorder\",\r\n        width: 200,\r\n        // pinned: window.innerWidth > 992 ? \"right\" : false,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Edit\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"blue\"\r\n                    onClick={() =>\r\n                      history.push({\r\n                        pathname: `/app/plan/EditPlanType/${params.data._id}`,\r\n                        state: params.data,\r\n                      })\r\n                    }\r\n                  />\r\n                )}\r\n              />\r\n\r\n              <Trash2\r\n                className=\"mr-50\"\r\n                size=\"25px\"\r\n                color=\"red\"\r\n                onClick={() => {\r\n                  this.runthisfunction(params.data._id);\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"PlanType\",\r\n        field: \"PlanType\",\r\n        // filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return <div className=\"\">{params?.data?.plan_type}</div>;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"PlanType Description\",\r\n        field: \"Description\",\r\n        filter: true,\r\n        width: 500,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"\">\r\n              <span className=\"\">\r\n                {ReactHtmlParser(params?.data?.plan_desc)}\r\n              </span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  componentDidMount() {\r\n    this.planTypeList();\r\n  }\r\n  planTypeList = () => {\r\n    axiosConfig\r\n      .get(\"/admin/get_plan_typ\")\r\n      .then((response) => {\r\n        const rowData = response.data.data;\r\n        this.setState({ rowData });\r\n      })\r\n      .catch((err) => {\r\n        swal(\"Something Went Wrong\");\r\n      });\r\n  };\r\n\r\n  runthisfunction(id) {\r\n    console.log(id);\r\n    swal(\r\n      `Do You Want To Delete Permanently`,\r\n      \"This item will be deleted immediately\",\r\n\r\n      {\r\n        buttons: {\r\n          cancel: \"Cancel\",\r\n          catch: { text: \"Delete \", value: \"catch\" },\r\n        },\r\n      }\r\n    ).then((value) => {\r\n      switch (value) {\r\n        case \"cancel\":\r\n          break;\r\n        case \"catch\":\r\n          axiosConfig.delete(`/admin/dlt_plantyp/${id}`).then((response) => {\r\n            this.planTypeList();\r\n          });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n  }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <Card className=\"overflow-hidden agGrid-card\">\r\n          <Row className=\"m-1\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                Assets List\r\n              </h1>\r\n            </Col>\r\n            <Col className=\"\">\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\" btn  float-right\"\r\n                    color=\"primary\"\r\n                    onClick={() => history.push(\"/app/AddAssets\")}\r\n                  >\r\n                    Add Assets\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <CardBody className=\"py-0\">\r\n            {this.state.rowData === null ? null : (\r\n              <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                  <div className=\"mb-1\">\r\n                    <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                      <DropdownToggle tag=\"div\">\r\n                        {this.gridApi\r\n                          ? this.state.currenPageSize\r\n                          : \"\" * this.state.getPageSize -\r\n                            (this.state.getPageSize - 1)}{\" \"}\r\n                        -{\" \"}\r\n                        {this.state.rowData.length -\r\n                          this.state.currenPageSize * this.state.getPageSize >\r\n                        0\r\n                          ? this.state.currenPageSize * this.state.getPageSize\r\n                          : this.state.rowData.length}{\" \"}\r\n                        of {this.state.rowData.length}\r\n                        <ChevronDown className=\"ml-50\" size={15} />\r\n                      </DropdownToggle>\r\n                      <DropdownMenu right>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(20)}\r\n                        >\r\n                          20\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(50)}\r\n                        >\r\n                          50\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(100)}\r\n                        >\r\n                          100\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(134)}\r\n                        >\r\n                          134\r\n                        </DropdownItem>\r\n                      </DropdownMenu>\r\n                    </UncontrolledDropdown>\r\n                  </div>\r\n                  <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                    <div className=\"table-input mr-1\">\r\n                      <Input\r\n                        placeholder=\"search...\"\r\n                        onChange={(e) => this.updateSearchQuery(e.target.value)}\r\n                        value={this.state.value}\r\n                      />\r\n                    </div>\r\n                    <div className=\"export-btn\">\r\n                      <Button.Ripple\r\n                        color=\"primary\"\r\n                        onClick={() => this.gridApi.exportDataAsCsv()}\r\n                      >\r\n                        Export as CSV\r\n                      </Button.Ripple>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <ContextLayout.Consumer>\r\n                  {(context) => (\r\n                    <AgGridReact\r\n                      gridOptions={{}}\r\n                      rowSelection=\"multiple\"\r\n                      defaultColDef={defaultColDef}\r\n                      columnDefs={columnDefs}\r\n                      rowData={rowData}\r\n                      onGridReady={this.onGridReady}\r\n                      colResizeDefault={\"shift\"}\r\n                      animateRows={true}\r\n                      floatingFilter={false}\r\n                      pagination={true}\r\n                      paginationPageSize={this.state.paginationPageSize}\r\n                      pivotPanelShow=\"always\"\r\n                      enableRtl={context.state.direction === \"rtl\"}\r\n                    />\r\n                  )}\r\n                </ContextLayout.Consumer>\r\n              </div>\r\n            )}\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default PlanTypeList;\r\n"],"sourceRoot":""}