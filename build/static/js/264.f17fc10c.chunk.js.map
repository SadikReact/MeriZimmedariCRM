{"version":3,"sources":["views/apps/zimmedari/NomineeList.js"],"names":["NomineeList","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","className","render","history","size","color","onClick","push","pathname","data","_id","runthisfunction","nominee","map","ele","nomineeName","nomineeEmailId","NomineePhoneNumber","style","relationWithNominee","percentageofShar","axiosConfig","get","then","response","console","log","Nominee","setState","catch","err","swal","onGridReady","gridApi","api","gridColumnApi","columnApi","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","this","id","buttons","cancel","text","value","delete","Fragment","col-sm-6","tag","length","right","placeholder","onChange","e","target","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"iZAqBMA,G,mNACJC,MAAQ,CACNC,QAAS,GACTC,mBAAoB,GACpBC,eAAgB,GAChBC,YAAa,GACbC,cAAe,CACbC,UAAU,EACVC,UAAU,EACVC,WAAW,EACXC,cAAc,GAEhBC,WAAY,CACV,CACEC,WAAY,OACZC,YAAa,oBACbC,MAAO,oBACPC,MAAO,IACPC,QAAQ,GAEV,CACEJ,WAAY,UACZE,MAAO,YACPC,MAAO,IAEPE,sBAAuB,SAACC,GACtB,OACE,yBAAKC,UAAU,0BACb,kBAAC,IAAD,CACEC,OAAQ,gBAAGC,EAAH,EAAGA,QAAH,OACN,kBAAC,IAAD,CACEF,UAAU,QACVG,KAAK,OACLC,MAAM,QACNC,QAAS,wBACPH,EAAQI,KAAK,CACXC,SAAS,4BAAD,iBAA8BR,EAAOS,YAArC,aAA8B,EAAaC,KACnD3B,MAAOiB,UAMjB,kBAAC,IAAD,CACEE,OAAQ,gBAAGC,EAAH,EAAGA,QAAH,OACN,kBAAC,IAAD,CACEF,UAAU,QACVG,KAAK,OACLC,MAAM,OACNC,QAAS,wBACPH,EAAQI,KAAK,CACXC,SAAS,4BAAD,iBAA8BR,EAAOS,YAArC,aAA8B,EAAaC,KACnD3B,MAAOiB,EAAOS,aAOxB,kBAAC,IAAD,CACER,UAAU,QACVG,KAAK,OACLC,MAAM,MACNC,QAAS,WAAO,IAAD,EACb,EAAKK,gBAAL,UAAqBX,EAAOS,YAA5B,aAAqB,EAAaC,WAQ9C,CACEhB,WAAY,OACZE,MAAO,OACPE,QAAQ,EACRD,MAAO,IACPE,sBAAuB,SAACC,GAAY,IAAD,IACjC,OACE,yBAAKC,UAAU,IAAf,OACGD,QADH,IACGA,GADH,UACGA,EAAQS,YADX,iBACG,EAAcG,eADjB,aACG,EAAuBC,KAAI,SAACC,GAAD,cAASA,QAAT,IAASA,OAAT,EAASA,EAAKC,kBAKlD,CACErB,WAAY,QACZE,MAAO,QACPE,QAAQ,EACRD,MAAO,IACPE,sBAAuB,SAACC,GAAY,IAAD,IACjC,OACE,yBAAKC,UAAU,IAAf,OACGD,QADH,IACGA,GADH,UACGA,EAAQS,YADX,iBACG,EAAcG,eADjB,aACG,EAAuBC,KAAI,SAACC,GAAD,cAASA,QAAT,IAASA,OAAT,EAASA,EAAKE,qBAKlD,CACEtB,WAAY,sBACZE,MAAO,qBACPE,QAAQ,EACRD,MAAO,IACPE,sBAAuB,SAACC,GAAY,IAAD,IACjC,OACE,yBAAKC,UAAU,IAAf,OACGD,QADH,IACGA,GADH,UACGA,EAAQS,YADX,iBACG,EAAcG,eADjB,aACG,EAAuBC,KAAI,SAACC,GAAD,cAASA,QAAT,IAASA,OAAT,EAASA,EAAKG,yBAKlD,CACEvB,WAAY,wBACZE,MAAO,sBACPE,QAAQ,EACRD,MAAO,IACPE,sBAAuB,SAACC,GAAY,IAAD,IACjC,OACE,yBAAKC,UAAU,GAAGiB,MAAO,CAAErB,MAAO,QAAlC,OACGG,QADH,IACGA,GADH,UACGA,EAAQS,YADX,iBACG,EAAcG,eADjB,aACG,EAAuBC,KAAI,SAACC,GAAD,cAASA,QAAT,IAASA,OAAT,EAASA,EAAKK,0BAKlD,CACEzB,WAAY,oBACZE,MAAO,sBACPE,QAAQ,EACRD,MAAO,IACPE,sBAAuB,SAACC,GAAY,IAAD,IACjC,OACE,yBAAKC,UAAU,GAAGiB,MAAO,CAAErB,MAAO,QAAlC,OACGG,QADH,IACGA,GADH,UACGA,EAAQS,YADX,iBACG,EAAcG,eADjB,aACG,EAAuBC,KAAI,SAACC,GAAD,cAASA,QAAT,IAASA,OAAT,EAASA,EAAKM,yB,EAwBtDtC,YAAc,WACZuC,IACGC,IAAI,yBACJC,MAAK,SAACC,GAAc,IAAD,IAClBC,QAAQC,IAAR,UAAYF,EAASf,YAArB,aAAY,EAAekB,SAC3B,IAAM3C,EAAO,UAAGwC,EAASf,YAAZ,aAAG,EAAekB,QAC/B,EAAKC,SAAS,CAAE5C,eAEjB6C,OAAM,SAACC,GACNC,IAAK,4B,EAgCXC,YAAc,SAAChC,GACb,EAAKiC,QAAUjC,EAAOkC,IACtB,EAAKC,cAAgBnC,EAAOoC,UAC5B,EAAKR,SAAS,CACZ1C,eAAgB,EAAK+C,QAAQI,2BAA6B,EAC1DlD,YAAa,EAAK8C,QAAQK,wBAC1BC,WAAY,EAAKN,QAAQO,6B,EAI7BC,kBAAoB,SAACC,GACnB,EAAKT,QAAQU,eAAeD,I,EAG9BE,WAAa,SAACF,GACR,EAAKT,UACP,EAAKA,QAAQY,sBAAsBC,OAAOJ,IAC1C,EAAKd,SAAS,CACZ1C,eAAgBwD,EAChBvD,YAAauD,M,uDA/DnB,WACEK,KAAKjE,gB,6BAeP,SAAgBkE,GAAK,IAAD,OAClBvB,QAAQC,IAAIsB,GACZjB,IAAK,oCAEH,wCAEA,CACEkB,QAAS,CACPC,OAAQ,SACRrB,MAAO,CAAEsB,KAAM,UAAWC,MAAO,YAGrC7B,MAAK,SAAC6B,GACN,OAAQA,GACN,IAAK,SACH,MACF,IAAK,QACH/B,IACGgC,OADH,kCACqCL,IAClCzB,MAAK,SAACC,GACL,EAAK1C,uB,oBAgCjB,WAAU,IAAD,OACP,EAA+CiE,KAAKhE,MAA5CC,EAAR,EAAQA,QAASS,EAAjB,EAAiBA,WAAYL,EAA7B,EAA6BA,cAC7B,OACE,kBAAC,IAAMkE,SAAP,KACE,kBAAC,IAAD,CAAMrD,UAAU,+BACd,kBAAC,IAAD,CAAKA,UAAU,OACb,kBAAC,IAAD,KACE,wBAAIsD,YAAA,EAAStD,UAAU,cAAvB,iBAIF,kBAAC,IAAD,CAAKA,UAAU,MAejB,kBAAC,IAAD,CAAUA,UAAU,QACM,OAAvB8C,KAAKhE,MAAMC,QAAmB,KAC7B,yBAAKiB,UAAU,8CACb,yBAAKA,UAAU,+DACb,yBAAKA,UAAU,QACb,kBAAC,IAAD,CAAsBA,UAAU,mBAC9B,kBAAC,IAAD,CAAgBuD,IAAI,OACjBT,KAAKd,QACFc,KAAKhE,MAAMG,eACX,GAAK6D,KAAKhE,MAAMI,aACf4D,KAAKhE,MAAMI,YAAc,GAAI,IAJpC,IAKI,IACD4D,KAAKhE,MAAMC,QAAQyE,OAClBV,KAAKhE,MAAMG,eAAiB6D,KAAKhE,MAAMI,YACzC,EACI4D,KAAKhE,MAAMG,eAAiB6D,KAAKhE,MAAMI,YACvC4D,KAAKhE,MAAMC,QAAQyE,OAAQ,IAVjC,MAWMV,KAAKhE,MAAMC,QAAQyE,OACvB,kBAAC,IAAD,CAAaxD,UAAU,QAAQG,KAAM,MAEvC,kBAAC,IAAD,CAAcsD,OAAK,GACjB,kBAAC,IAAD,CACEF,IAAI,MACJlD,QAAS,kBAAM,EAAKsC,WAAW,MAFjC,MAMA,kBAAC,IAAD,CACEY,IAAI,MACJlD,QAAS,kBAAM,EAAKsC,WAAW,MAFjC,MAMA,kBAAC,IAAD,CACEY,IAAI,MACJlD,QAAS,kBAAM,EAAKsC,WAAW,OAFjC,OAMA,kBAAC,IAAD,CACEY,IAAI,MACJlD,QAAS,kBAAM,EAAKsC,WAAW,OAFjC,UASN,yBAAK3C,UAAU,iDACb,yBAAKA,UAAU,oBACb,kBAAC,IAAD,CACE0D,YAAY,YACZC,SAAU,SAACC,GAAD,OAAO,EAAKpB,kBAAkBoB,EAAEC,OAAOV,QACjDA,MAAOL,KAAKhE,MAAMqE,SAGtB,yBAAKnD,UAAU,cACb,kBAAC,IAAO8D,OAAR,CACE1D,MAAM,UACNC,QAAS,kBAAM,EAAK2B,QAAQ+B,oBAF9B,oBASN,kBAAC,IAAcC,SAAf,MACG,SAACC,GAAD,OACC,kBAAC,cAAD,CACEC,YAAa,GACbC,aAAa,WACbhF,cAAeA,EACfK,WAAYA,EACZT,QAASA,EACTgD,YAAa,EAAKA,YAClBqC,iBAAkB,QAClBC,aAAa,EACbC,gBAAgB,EAChBC,YAAY,EACZvF,mBAAoB,EAAKF,MAAME,mBAC/BwF,eAAe,SACfC,UAAuC,QAA5BR,EAAQnF,MAAM4F,uB,GAxUrBC,IAAMC,YAoVjB/F","file":"static/js/264.f17fc10c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Col,\r\n  Row,\r\n  Card,\r\n  Input,\r\n  Button,\r\n  CardBody,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown,\r\n} from \"reactstrap\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport { ChevronDown, Edit, Eye, Trash2, ArrowDownRight } from \"react-feather\";\r\nimport { ContextLayout } from \"../../../utility/context/Layout\";\r\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport swal from \"sweetalert\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nclass NomineeList extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 100,\r\n        filter: true,\r\n      },\r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"sortorder\",\r\n        width: 200,\r\n        // pinned: window.innerWidth > 992 ? \"right\" : false,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Eye\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"green\"\r\n                    onClick={() =>\r\n                      history.push({\r\n                        pathname: `/app/nominee/ViewNominee/${params.data?._id}`,\r\n                        state: params,\r\n                      })\r\n                    }\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Edit\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"blue\"\r\n                    onClick={() =>\r\n                      history.push({\r\n                        pathname: `/app/nominee/EditNominee/${params.data?._id}`,\r\n                        state: params.data,\r\n                      })\r\n                    }\r\n                  />\r\n                )}\r\n              />\r\n\r\n              <Trash2\r\n                className=\"mr-50\"\r\n                size=\"25px\"\r\n                color=\"red\"\r\n                onClick={() => {\r\n                  this.runthisfunction(params.data?._id);\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Name\",\r\n        field: \"name\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"\">\r\n              {params?.data?.nominee?.map((ele) => ele?.nomineeName)}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Email\",\r\n        field: \"email\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"\">\r\n              {params?.data?.nominee?.map((ele) => ele?.nomineeEmailId)}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Nominee PhoneNumber\",\r\n        field: \"NomineePhoneNumber\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"\">\r\n              {params?.data?.nominee?.map((ele) => ele?.NomineePhoneNumber)}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Relation With Nominee\",\r\n        field: \"relationWithNominee\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"\" style={{ width: \"100\" }}>\r\n              {params?.data?.nominee?.map((ele) => ele?.relationWithNominee)}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"PercentageofShare\",\r\n        field: \"relationWithNominee\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"\" style={{ width: \"100\" }}>\r\n              {params?.data?.nominee?.map((ele) => ele?.percentageofShar)}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      // {\r\n      //   headerName: \"Status\",\r\n      //   field: \"status\",\r\n      //   filter: true,\r\n      //   width: 150,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"\" style={{ width: \"100\" }}>\r\n      //         {params?.data?.status}\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n    ],\r\n  };\r\n  componentDidMount() {\r\n    this.NomineeList();\r\n  }\r\n  NomineeList = () => {\r\n    axiosConfig\r\n      .get(\"/nominee/view-nominee\")\r\n      .then((response) => {\r\n        console.log(response.data?.Nominee);\r\n        const rowData = response.data?.Nominee;\r\n        this.setState({ rowData });\r\n      })\r\n      .catch((err) => {\r\n        swal(\"Something Went Wrong\");\r\n      });\r\n  };\r\n\r\n  runthisfunction(id) {\r\n    console.log(id);\r\n    swal(\r\n      `Do You Want To Delete Permanently`,\r\n      \"This item will be deleted immediately\",\r\n\r\n      {\r\n        buttons: {\r\n          cancel: \"Cancel\",\r\n          catch: { text: \"Delete \", value: \"catch\" },\r\n        },\r\n      }\r\n    ).then((value) => {\r\n      switch (value) {\r\n        case \"cancel\":\r\n          break;\r\n        case \"catch\":\r\n          axiosConfig\r\n            .delete(`/nominee/delete-nominee/${id}`)\r\n            .then((response) => {\r\n              this.NomineeList();\r\n            });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n  }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <Card className=\"overflow-hidden agGrid-card\">\r\n          <Row className=\"m-1\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                Nominee List\r\n              </h1>\r\n            </Col>\r\n            <Col className=\"\">\r\n              {/* <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\" btn  float-right\"\r\n                    color=\"primary\"\r\n                    onClick={() => history.push(\"/app/AddAssets\")}\r\n                  >\r\n                    Add Assets\r\n                  </Button>\r\n                )}\r\n              /> */}\r\n            </Col>\r\n          </Row>\r\n\r\n          <CardBody className=\"py-0\">\r\n            {this.state.rowData === null ? null : (\r\n              <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                  <div className=\"mb-1\">\r\n                    <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                      <DropdownToggle tag=\"div\">\r\n                        {this.gridApi\r\n                          ? this.state.currenPageSize\r\n                          : \"\" * this.state.getPageSize -\r\n                            (this.state.getPageSize - 1)}{\" \"}\r\n                        -{\" \"}\r\n                        {this.state.rowData.length -\r\n                          this.state.currenPageSize * this.state.getPageSize >\r\n                        0\r\n                          ? this.state.currenPageSize * this.state.getPageSize\r\n                          : this.state.rowData.length}{\" \"}\r\n                        of {this.state.rowData.length}\r\n                        <ChevronDown className=\"ml-50\" size={15} />\r\n                      </DropdownToggle>\r\n                      <DropdownMenu right>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(20)}\r\n                        >\r\n                          20\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(50)}\r\n                        >\r\n                          50\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(100)}\r\n                        >\r\n                          100\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(134)}\r\n                        >\r\n                          134\r\n                        </DropdownItem>\r\n                      </DropdownMenu>\r\n                    </UncontrolledDropdown>\r\n                  </div>\r\n                  <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                    <div className=\"table-input mr-1\">\r\n                      <Input\r\n                        placeholder=\"search...\"\r\n                        onChange={(e) => this.updateSearchQuery(e.target.value)}\r\n                        value={this.state.value}\r\n                      />\r\n                    </div>\r\n                    <div className=\"export-btn\">\r\n                      <Button.Ripple\r\n                        color=\"primary\"\r\n                        onClick={() => this.gridApi.exportDataAsCsv()}\r\n                      >\r\n                        Export as CSV\r\n                      </Button.Ripple>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <ContextLayout.Consumer>\r\n                  {(context) => (\r\n                    <AgGridReact\r\n                      gridOptions={{}}\r\n                      rowSelection=\"multiple\"\r\n                      defaultColDef={defaultColDef}\r\n                      columnDefs={columnDefs}\r\n                      rowData={rowData}\r\n                      onGridReady={this.onGridReady}\r\n                      colResizeDefault={\"shift\"}\r\n                      animateRows={true}\r\n                      floatingFilter={false}\r\n                      pagination={true}\r\n                      paginationPageSize={this.state.paginationPageSize}\r\n                      pivotPanelShow=\"always\"\r\n                      enableRtl={context.state.direction === \"rtl\"}\r\n                    />\r\n                  )}\r\n                </ContextLayout.Consumer>\r\n              </div>\r\n            )}\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default NomineeList;\r\n"],"sourceRoot":""}